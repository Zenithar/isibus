#summary Describe the protocol used to communicate between modules.
#labels Phase-Implementation

= Control Center =

Messages triggered by the ControlCenter :

|| Protocol || Params || Class || From || Description ||
|| `Bus_([0-9]+) Start` || instance_id || BusStartMsg || Bus || Sended by the bus process, give to all its instance number ||
|| `Bus id=([0-9]+) position=([0-9]+),([-]?[0-9]+) capacity=([0-9]+)` || int, int, int, int || BusPositionMsg || Bus || Send his position by giving the road id, and the distance on it. Positive distance means the bus is going away, and negative means it's coming back. And the capacity of the bus at the moment. ||
|| `Station_([0-9]+) Start` || instance_id || StationStartMsg || Station || Sended by the station process, give to all its instance number. ||

= Bus =

|| Protocol || Parameters || Callback Class || From || Description ||
|| `Bus_([0-9]+) id=([0-9]+) passengers=([0-9]+) line=([0-9]):(([0-9]+,[0-9]+;)*)` || instance_id,int,int,int,string || || CC || Initialise the bus process, with control center data. Send the internal bus id, its capacity, and the affected line. ||

= Station =
|| Protocol || Parameters || Callback Class || From || Description ||
|| `Station_([0-9]+) id=([0-9]+) road=([0-9]+) lines=([0-9]+(,[0-9]+)*) len=([0-9]+)` || instance_id, int, int, string, int || || CC || Synchronize the station process with the control center data. ||

= GUI =
|| Protocol || Parameters || Callback Class || From || Description ||


= Scenario =

We have 3 bus process, 3 stations, 3 lines.

|| Event || Bus || Station || CC || GUI ||
|| Bus 1 Start || `B1 >> Bus_12134 Start` || || `Bus_12134 id=1 passenger=50 line=1:1,300;2,300;3,300;4,300;` || ||
|| Bus 2 Start || `B1 >> Bus_34521 Start` || || `Bus_34521 id=2 passenger=20 line=2:1,300;2,300;8,300:7,600;6,600;5,300;` || ||
|| Bus 3 Start || `B1 >> Bus_56789 Start` || || `Bus_56789 id=3 passenger=50 line=3:6,600;7,600;8,300;9,300;10,600;11,900;12,300;` || ||